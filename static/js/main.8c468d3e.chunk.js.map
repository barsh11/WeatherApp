{"version":3,"sources":["style/globalStyle.js","containers/WeatherContainer/WeatherContainerStyle.js","containers/WeatherContainer/WeatherContainer.js","assets/coverPhoto.jpg","pages/HomePageStyle.js","pages/HomePage.js","index.js","components/UI/Typography/Typography.jsx"],"names":["bodyStyles","css","htmlStyles","generalStyles","GlobalStyle","createGlobalStyle","SWeatherContainer","styled","div","Search","React","lazy","CurrContainer","DailyContainer","ForecastContainer","ErrorMessage","WeatherContainer","props","useState","isError","message","error","setError","locationKey","setLocationKey","city","setCity","country","setCountry","onLocationChoiceHandler","locationData","countryId","onErrorHandler","errMsg","fallback","onLocationChoice","init","onError","show","closeErrorMessage","data","SContainer","img","SAppTitle","Typography","App","typographyType","uppercase","text","app","ReactDOM","render","document","getElementById","STypography","type","setTypographySize","color","bold","capitalize","shadow","className"],"mappings":"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","file":"static/js/main.8c468d3e.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components';\n\n/*export const fontUrl = 'https://fonts.googleapis.com/css?family=Nunito+Sans:400,700,800,900';*/\n\n/*$bp-largest: 75em; //1200px\n$bp-large: 68.75em; //1100px\n$bp-medium: 56.25em; //900px\n$bp-small:  37.5em; //600px\n$bp-smallest: 31.25em; //500px*/\n\nexport const bodyStyles = css`\n    font-family: 'Helvetica';\n    color: #ccc;\n    font-weight: 300;\n    line-height: 1.6;\n`;\n\nexport const htmlStyles = css`\n    box-sizing: border-box;\n\n    font-size: 62.5%; /*1rem==10px / 10px/16px=62.5%*/\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 56.25%; /*1rem==9px / 9px/16px=56.25%*/\n    }\n`;\n\nexport const generalStyles= css`\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n`;\n\n\nexport const GlobalStyle = createGlobalStyle`\n    *,\n    *::before,\n    *::after{\n        ${generalStyles}\n    }    \n\n    html{\n        ${htmlStyles}\n    }\n\n    body {\n        ${bodyStyles}\n    }\n`;\n\nexport default GlobalStyle;","import styled from \"styled-components\";\n\nexport const SWeatherContainer = styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\njustify-self: start;\nalign-self: start;  \n\nheight: 100%;\n  width: 100%;\n    \n  display: grid;\n  grid-template-rows: 1fr 3.5fr 2fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 3.5fr 2.5fr 2fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.5fr 2fr 1.5fr 1fr;\n    grid-gap: 0.8rem;\n  }\n`;","import React, { Suspense, useState } from \"react\";\nimport { SWeatherContainer } from './WeatherContainerStyle';\n\nconst Search= React.lazy(() => import('../Search/Search'));\nconst CurrContainer= React.lazy(() => import('../CurrContainer/CurrContainer'));\nconst DailyContainer= React.lazy(() => import('../DailyContainer/DailyContainer'));\nconst ForecastContainer= React.lazy(() => import('../ForecastContainer/ForcastContainer'));\nconst ErrorMessage= React.lazy(() => import('../../components/UI/ErrorMessage/ErrorMessage'));\n\n\nconst WeatherContainer = (props) => {\n  const [error, setError] = useState({ isError: false, message: \"\" });\n  const [locationKey, setLocationKey] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const onLocationChoiceHandler = (locationData) => {\n    setLocationKey(locationData?.locationKey || \"\");\n    setCity(locationData?.city || \"\");\n    setCountry(locationData?.countryId || \"\");\n  };\n\n  const onErrorHandler = (errMsg) => {\n    if (!error.isError) {\n      setError({ isError: true, message: errMsg });\n    }\n  };\n\n  const confirmedErrorSolve = () => {\n    if (error.isError) {\n      onLocationChoiceHandler(null);\n      setError({ isError: false, message: \"\" });\n    }\n  };\n\n  return (\n    <SWeatherContainer>\n      <Suspense fallback={<div>Loading...</div>}>\n      <Search\n        onLocationChoice={onLocationChoiceHandler}\n        init={error.isError}\n        onError={onErrorHandler}\n      />\n      {error.isError ? (\n        <ErrorMessage\n          show={true}\n          closeErrorMessage={confirmedErrorSolve}\n          message={error.message}\n        />\n      ) : !locationKey ? null : (\n        [\n          <CurrContainer\n            onError={onErrorHandler}\n            key={\"CurrContainer\"}\n            locationKey={!error.isError ? locationKey : null}\n            data={\n              locationKey && {\n                city: city,\n                country: country,\n              }\n            }\n          />,\n          <DailyContainer\n            onError={onErrorHandler}\n            key={\"DailyContainer\"}\n            locationKey={locationKey}\n          />,\n          <ForecastContainer\n            onError={onErrorHandler}\n            key={\"ForecastContainer\"}\n            locationKey={locationKey}\n          />,\n        ]\n      )}\n      </Suspense>\n    </SWeatherContainer>\n  );\n};\n\nexport default WeatherContainer;\n","export default __webpack_public_path__ + \"static/media/coverPhoto.2fb44ada.jpg\";","import styled from 'styled-components';\nimport Typography from '../components/UI/Typography/Typography';\nimport img from '../assets/coverPhoto.jpg';\n\nexport const SContainer= styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  padding: 4rem;\n\n  background-image: url(${img});  \n  background-size: cover;\n  background-position: center;\n\n  display: grid;\n  grid-template-rows: 1fr 6.5fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 9fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.3fr 5fr;\n    grid-gap: 0.8rem;\n  }\n`;\n\nexport const SAppTitle= styled(Typography)`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  justify-self: start;\n  align-self: start;\n`;","import React from \"react\";\nimport GlobalStyle from \"../style/globalStyle\";\nimport WeatherContainer from \"../containers/WeatherContainer/WeatherContainer\";\nimport { SContainer, SAppTitle } from \"./HomePageStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <SContainer>\n        <SAppTitle\n          typographyType=\"heading3\"\n          uppercase={true}\n          text=\"weather app\"\n        />\n        <WeatherContainer />\n      </SContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/HomePage';\n\nconst app= <App />;\n\nReactDOM.render(app, document.getElementById('root'));","import React from 'react';\nimport styled from 'styled-components';\n\nconst setTypographySize= (type) => {\n    switch(type){\n        case 'heading1':\n            return `\n            7.6rem;\n\n            @media only screen and (max-width: 37.25em){\n                font-size: 6rem;\n            }\n            `;\n        case 'heading2':\n            return `\n            5.8rem;\n            `;\n        case 'heading3':\n            return `\n            2.8rem;\n            `;\n        case 'body':\n            return `\n            2.2rem;\n            `;\n        case 'description': \n            return `\n            2rem;\n            `;\n        default:\n            return`\n            1.5rem;\n            `;\n    }\n}\n\nconst STypography= styled.div`\n    font-size: ${props => setTypographySize(props.typographyType)};\n    color: ${props => props.color};\n    font-weight:  ${props => props.bold && `400`};\n    text-transform: ${props => props.capitalize && `capitalize`};\n    text-transform: ${props => props.uppercase && `uppercase`};\n    text-shadow: ${props => props.shadow && `1px 2px 4px rgba(0,0,0,0.2)`};\n`;\n\nconst Typography= (props) => {\n    return (\n        <STypography\n        className= {props.className}\n        typographyType= {props.typographyType || 'caption'}\n        color= {props.color || 'white'}\n        bold= {props.bold || false}\n        capitalize= {props.capitalize || true}\n        uppercase= {props.uppercase || false}\n        shadow= {props.shadow || false}\n        >\n            {props.text || ''}\n        </STypography>\n    );\n}\n\nexport default Typography;"],"sourceRoot":""}