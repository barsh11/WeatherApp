{"version":3,"sources":["components/UI/Icon/Icon.jsx","assets/warning.svg","components/UI/Button/Button.jsx","components/UI/Backdrop/Backdrop.jsx","components/UI/ErrorMessage/ErrorMessage.jsx"],"names":["SReactSVG","styled","ReactSVG","size","css","transform","color","Icon","props","src","source","className","SButton","button","Button","onClick","clicked","children","SBackdrop","div","Backdrop","show","SWrapper","SErrorMessageWrapper","SIconWrapper","SDescriptionWrapper","ErrorMessage","closeErrorMessage","style","opacity","logo","Typography","typographyType","uppercase","text","message"],"mappings":"siBAIA,IAAMA,EAAWC,YAAOC,IAAPD,CAAF,KAIT,gBAAEE,EAAF,EAAEA,KAAF,OAAYA,GAAQC,YAAJ,IAAiBD,EAAiBA,MAClD,gBAAEE,EAAF,EAAEA,UAAF,OAAiBA,GAAaD,YAAJ,IAAqBC,MAE3C,gBAAEC,EAAF,EAAEA,MAAF,OAAaA,GAASF,YAAJ,IAAgBE,MAiB7BC,IAZH,SAAAC,GACR,OACI,cAACR,EAAD,CACAS,IAAMD,EAAME,OACZJ,MAAQE,EAAMF,MACdH,KAAOK,EAAML,KACbE,UAAYG,EAAMH,UAClBM,UAAYH,EAAMG,c,sFCvBX,MAA0B,oC,8kBCGzC,IAAMC,EAASX,IAAOY,OAAT,KAoCEC,EARD,SAAAN,GACV,OACI,cAACI,EAAD,CAASG,QAASP,EAAMQ,QAAxB,SACKR,EAAMS,Y,2NC/BnB,IAAMC,EAAWjB,IAAOkB,IAAT,KAkBAC,EAPC,SAAAZ,GAEZ,OACIA,EAAMa,KAAO,cAACH,EAAD,CAAWH,QAASP,EAAMQ,UAAwB,M,6sDCTvE,IAAMM,EAAUrB,IAAOkB,IAAT,KAaRI,EAAsBtB,IAAOkB,IAAT,KA6CpBK,EAAcvB,IAAOkB,IAAT,KAiBZM,EAAqBxB,IAAOkB,IAAT,KAoDVO,UAjCK,SAAAlB,GAEhB,OACI,eAACc,EAAD,WACI,cAAC,EAAD,CAAUD,KAAOb,EAAMa,KAAML,QAASR,EAAMmB,oBAC5C,eAACJ,EAAD,CACAK,MAAQ,CACJvB,UAAWG,EAAMa,KAAO,gBAAkB,qBAC1CQ,QAASrB,EAAMa,KAAO,IAAM,KAHhC,UAKI,eAACG,EAAD,WACI,cAACjB,EAAA,EAAD,CACAG,OAASoB,EACTxB,MAAO,QACPH,KAAM,SAEN,cAAC4B,EAAA,EAAD,CACAC,eAAgB,UAChBC,WAAY,EACZC,KAAM,wBAEV,eAACT,EAAD,WACI,cAACM,EAAA,EAAD,CACAC,eAAgB,UAChB1B,MAAO,UACP4B,KAAO1B,EAAM2B,UACb,cAAC,EAAD,CAAQnB,QAASR,EAAMmB,kBAAvB","file":"static/js/9.b2617b4e.chunk.js","sourcesContent":["import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport styled, { css } from 'styled-components';\n\nconst SReactSVG= styled(ReactSVG)`\n\nsvg{\n    fill: black;\n    ${({size}) => size && css`width: ${size}; height: ${size};`}\n    ${({transform}) => transform && css`transform: ${transform};`}\n    path{\n        ${({color}) => color && css`fill: ${color};`}\n    }\n}\n`;\n\nconst Icon= props => {\n    return(\n        <SReactSVG\n        src= {props.source}\n        color= {props.color}\n        size= {props.size}\n        transform= {props.transform}\n        className= {props.className}\n        />\n    );\n}\n\nexport default Icon;","export default __webpack_public_path__ + \"static/media/warning.11660318.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst SButton= styled.button`\n    border: none;\n    cursor: pointer;\n    padding: 1.8rem 3.2rem;\n    margin-top: 2rem;\n    border-radius: 100px;\n    background-color: #236f82;\n\n    text-transform: uppercase;\n    color: white;\n    font-size: 1.4;\n    font-weight: 400;\n\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n\n    & :active{\n        outline: none;\n    }\n\n    @media only screen and (max-width: 56.25em){\n        font-size: 1.2rem;\n    }\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 1rem;\n    }\n`;\n\nconst Button= props => {\n    return (\n        <SButton onClick={props.clicked}>\n            {props.children}\n        </SButton>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SBackdrop= styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\n\nconst Backdrop= props => {\n\n    return (\n        props.show ? <SBackdrop onClick={props.clicked}></SBackdrop> : null\n    );\n}\n\nexport default Backdrop;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../Typography/Typography';\nimport Icon from '../Icon/Icon';\nimport logo from '../../../assets/warning.svg';\nimport Button from '../Button/Button';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst SWrapper= styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\n@media only screen and (max-width: 56.25em){\n    grid-row: 2 / span 2;\n  }\n\nposition: relative;\nwidth: 100%;\nheight: 100%;\n`;\n\nconst SErrorMessageWrapper= styled.div`\nheight: 140%;\nwidth: 25%;\n\n@media only screen and (min-width: 75em){\n    height: 140%;\n    width: 30%;\n}\n\n@media only screen and (max-width: 75em){\n    height: 120%;\n    width: 35%;\n}\n\n@media only screen and (max-width: 56.25em){\n    height: 100%;\n    width: 45%;\n  }\n\n@media only screen and (max-width: 37.25em){\n    height: 80%;\n    width: 55%;\n}\n\n@media only screen and (max-width: 31.25em){\n    height: 60%;\n    width: 65%;\n}\n\nposition: absolute;\nmargin: auto;\nleft: 0;\nright: 0;\n\ntransition: all 0.3s ease-out;\n\ndisplay: grid;\n  grid-template-rows: 1.8fr 1fr;\n  grid-template-columns: 1fr;\n\n    z-index: 101;\n    text-align: center;\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n`;\n\nconst SIconWrapper= styled.div`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  align-self: center;\n\n  display: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n\nwidth: 100%;\nheight: 100%;\nbackground-image: linear-gradient(to top, #083540, #236f82);\n\n`;\n\nconst SDescriptionWrapper= styled.div`\n    grid-row: 2 / span 1;\n    grid-column: 1 / -1;\n\n    justify-self: center;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    background-color: #e1e3e1;\n\n`;\n\n\nconst ErrorMessage= props => {\n\n    return (\n        <SWrapper>\n            <Backdrop show= {props.show} clicked={props.closeErrorMessage}/>\n            <SErrorMessageWrapper\n            style= {{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n                <SIconWrapper>\n                    <Icon\n                    source= {logo}\n                    color= 'white'\n                    size= '7rem'\n                    />\n                    <Typography \n                    typographyType= 'caption'\n                    uppercase= {true}\n                    text= 'an error occured'/>\n                </SIconWrapper>\n                <SDescriptionWrapper>\n                    <Typography \n                    typographyType= 'caption'\n                    color= '#8c918d'\n                    text= {props.message}/>\n                    <Button clicked={props.closeErrorMessage}>Retry</Button>\n                </SDescriptionWrapper>\n            </SErrorMessageWrapper>\n        </SWrapper>\n    );\n}\n\nexport default ErrorMessage;"],"sourceRoot":""}