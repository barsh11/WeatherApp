{"version":3,"sources":["style/globalStyle.js","components/UI/Typography/Typography.jsx","assets/coverPhoto.jpg","constants/weather.js","services/axios.js","hooks/useDebounce.js","assets/search.svg","components/UI/Icon/Icon.jsx","components/UI/Input/Input.jsx","components/UI/Loader/Loader.jsx","containers/Search/Search.js","utilities/getIconSrc.js","components/UI/WeatherIcon/WeatherIcon.js","components/CurrWeather/CurrWeather.jsx","components/CurrDate/CurrDate.jsx","components/CurrLocation/CurrLocation.jsx","components/CurrConditions/CurrConditions.jsx","containers/CurrContainer/CurrContainer.js","components/CurrParameter/CurrParameter.jsx","components/CurrParameters/CurrParameters.jsx","containers/DailyContainer/DailyContainer.js","components/ForecastItem/ForecastItem.jsx","components/Forecast/Forecast.jsx","containers/ForecastContainer/ForcastContainer.js","assets/warning.svg","components/UI/Button/Button.jsx","components/UI/Backdrop/Backdrop.jsx","components/UI/ErrorMessage/ErrorMessage.jsx","containers/WeatherContainer/WeatherContainer.js","pages/HomePage.js","index.js"],"names":["bodyStyles","css","htmlStyles","generalStyles","GlobalStyle","createGlobalStyle","STypography","styled","div","props","type","setTypographySize","typographyType","color","bold","capitalize","uppercase","shadow","Typography","className","text","BASE_URL","BASE_URL_LOCATIONS","BASE_URL_CONDITIONS","BASE_URL_DAILY","BASE_URL_FORECAST","createInstance","url","queryParams","axios","create","baseURL","params","apikey","axiosConditions","axiosDefs","axiosDaily","details","axiosForecast","axiosLocations","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","SReactSVG","ReactSVG","size","transform","Icon","src","source","SInputWrapper","SInput","input","SIcon","Input","logo","placeholder","onChange","changed","animation","keyframes","SDot","SLoader","Loader","SSearch","form","SUl","ul","SLi","li","Sa","a","Search","searchInput","setSearchInput","results","setResults","isSearching","setIsSearching","location","setLocation","isShown","setIsShown","debouncedSearchInput","onLocationChoice","init","onError","initState","useCallback","getState","query","isActive","get","q","then","res","limitedResults","i","data","_","cloneDeep","catch","err","content","length","map","el","onClick","e","chosenLocationIndex","chosenLocation","locationKey","Key","city","LocalizedName","countryId","Country","ID","clickHandler","target","getIconSrc","iconNum","num","toString","SImg","img","setSize","WeatherIcon","SCurrWeatherWrapper","SCurrWeather","CurrWeather","iconSrc","deg","description","CurrDate","date","moment","format","CurrLocation","country","SCurrConditions","CurrConditions","CurrManager","temperature","setTemperature","setDescription","iconNumber","setIconNumber","Temperature","Metric","Value","WeatherText","SCurrParameterWrapper","CurrParameter","label","renderUnit","SCurrParametersWrapper","CurrParameters","FtoC","fDeg","toFixed","toLocalTime","ISO8601String","ISODate","utc","utcDate","toDate","local","DailyManager","sunrise","setSunrise","sunset","setSunset","lowTemperature","setLowTemperature","highTemperature","setHighTemperature","rainProb","setRainProb","wind","setWind","DailyForecasts","sunriseTime","Sun","Rise","sunsetTime","Set","Minimum","Maximum","Day","RainProbability","Wind","Speed","SForcestItemWrapper","SWeatherIcon","ForecastItem","time","SForecastWrapper","SForecast","Forecast","renderForecastItem","toLocalDate","ForcastManager","forecastResults","DateTime","SButton","button","Button","clicked","children","SBackdrop","Backdrop","show","SWrapper","SErrorMessageWrapper","SIconWrapper","SDescriptionWrapper","ErrorMessage","closeErrorMessage","style","opacity","message","SWeatherContainer","SCurrContainer","CurrContainer","SDailyContainer","DailyContainer","SForecastContainer","ForecastContainer","WeatherContainer","isError","error","setError","setLocationKey","setCity","setCountry","onLocationChoiceHandler","locationData","onErrorHandler","SContainer","SAppTitle","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ae88908.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components';\n\n/*export const fontUrl = 'https://fonts.googleapis.com/css?family=Nunito+Sans:400,700,800,900';*/\n\n/*$bp-largest: 75em; //1200px\n$bp-large: 68.75em; //1100px\n$bp-medium: 56.25em; //900px\n$bp-small:  37.5em; //600px\n$bp-smallest: 31.25em; //500px*/\n\nexport const bodyStyles = css`\n    font-family: 'Helvetica';\n    color: #ccc;\n    font-weight: 300;\n    line-height: 1.6;\n`;\n\nexport const htmlStyles = css`\n    box-sizing: border-box;\n\n    font-size: 62.5%; /*1rem==10px / 10px/16px=62.5%*/\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 56.25%; /*1rem==9px / 9px/16px=56.25%*/\n    }\n`;\n\nexport const generalStyles= css`\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n`;\n\n\nexport const GlobalStyle = createGlobalStyle`\n    *,\n    *::before,\n    *::after{\n        ${generalStyles}\n    }    \n\n    html{\n        ${htmlStyles}\n    }\n\n    body {\n        ${bodyStyles}\n    }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport styled from 'styled-components';\n\nconst setTypographySize= (type) => {\n    switch(type){\n        case 'heading1':\n            return `\n            7.6rem;\n\n            @media only screen and (max-width: 37.25em){\n                font-size: 6rem;\n            }\n            `;\n        case 'heading2':\n            return `\n            5.8rem;\n            `;\n        case 'heading3':\n            return `\n            2.8rem;\n            `;\n        case 'body':\n            return `\n            2.2rem;\n            `;\n        case 'description': \n            return `\n            2rem;\n            `;\n        default:\n            return`\n            1.5rem;\n            `;\n    }\n}\n\nconst STypography= styled.div`\n    font-size: ${props => setTypographySize(props.typographyType)};\n    color: ${props => props.color};\n    font-weight:  ${props => props.bold && `400`};\n    text-transform: ${props => props.capitalize && `capitalize`};\n    text-transform: ${props => props.uppercase && `uppercase`};\n    text-shadow: ${props => props.shadow && `1px 2px 4px rgba(0,0,0,0.2)`};\n`;\n\nconst Typography= (props) => {\n    return (\n        <STypography\n        className= {props.className}\n        typographyType= {props.typographyType || 'caption'}\n        color= {props.color || 'white'}\n        bold= {props.bold || false}\n        capitalize= {props.capitalize || true}\n        uppercase= {props.uppercase || false}\n        shadow= {props.shadow || false}\n        >\n            {props.text || ''}\n        </STypography>\n    );\n}\n\nexport default Typography;","export default __webpack_public_path__ + \"static/media/coverPhoto.2fb44ada.jpg\";","// API KEY\nexport const API_KEY = \"W33jR1369yOUX5JaevOtIIlC1OG2RvC5\";\n\n// BASE URL\nexport const BASE_URL = \"http://dataservice.accuweather.com/\";\n\n// LOCATIONS\nexport const BASE_URL_LOCATIONS = `${BASE_URL}locations/v1/cities/autocomplete`;\n\n// CONDITIONS\nexport const BASE_URL_CONDITIONS = `${BASE_URL}currentconditions/v1/`;\n\n// DAILY\nexport const BASE_URL_DAILY = `${BASE_URL}forecasts/v1/daily/1day/`;\n\n// FORECAST\nexport const BASE_URL_FORECAST = `${BASE_URL}forecasts/v1/hourly/12hour/`;\n","import axios from 'axios';\nimport * as axiosDefs from '../constants/weather';\n\nconst createInstance= (url, queryParams) => {\n    const instance= axios.create({\n        baseURL: url,\n        params:{\n            apikey: axiosDefs.API_KEY,\n            ...queryParams\n        }\n    })\n    return instance;\n}\n\nexport const axiosConditions= createInstance(axiosDefs.BASE_URL_CONDITIONS, null);\n\nexport const axiosDaily= createInstance(axiosDefs.BASE_URL_DAILY, {details: true});\n\nexport const axiosForecast= createInstance(axiosDefs.BASE_URL_FORECAST, null);\n\nexport const axiosLocations= createInstance(axiosDefs.BASE_URL_LOCATIONS, null);","import { useState, useEffect } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;","export default __webpack_public_path__ + \"static/media/search.6ac6b6bc.svg\";","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport styled, { css } from 'styled-components';\n\nconst SReactSVG= styled(ReactSVG)`\n\nsvg{\n    fill: black;\n    ${({size}) => size && css`width: ${size}; height: ${size};`}\n    ${({transform}) => transform && css`transform: ${transform};`}\n    path{\n        ${({color}) => color && css`fill: ${color};`}\n    }\n}\n`;\n\nconst Icon= props => {\n    return(\n        <SReactSVG\n        src= {props.source}\n        color= {props.color}\n        size= {props.size}\n        transform= {props.transform}\n        className= {props.className}\n        />\n    );\n}\n\nexport default Icon;","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../../assets/search.svg';\nimport Icon from '../Icon/Icon';\n\nconst SInputWrapper= styled.div`\n    display: flex;\n    align-items: center;\n\n    width: 70rem;\n\n    @media only screen and (max-width: 56.25em){\n        width: 80%;\n    }\n`;\n\nconst SInput= styled.input`\n    border: none;\n    \n    width: 100%;\n    font-size: 2.2rem;\n    border-radius: 5rem;\n    padding: 2.5rem 4.5rem 2.5rem 5rem;\n    margin: 0 auto;\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n    \n    &::placeholder{\n        color: #8c918d;\n        font-size: 2.5rem;\n\n        transform: translateY(0.4rem);\n    }\n\n    &:focus{\n        outline: none;\n    }\n`;\n\nconst SIcon= styled(Icon)`\n    transform: translate(4.5rem, 0.3rem);\n`;\n\nconst Input= props => {\n    return (\n        <SInputWrapper>\n            <SIcon \n            source= {logo}\n            color= \"#ccc\"\n            size= \"3rem\" />\n            <SInput \n            placeholder= \"Search for a city...\"\n            type= \"search\"\n            onChange= {props.changed}\n            value= {props.value}\n            />\n        </SInputWrapper>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst animation= keyframes`\n  0% { margin-bottom: 0 }\n  50% { margin-bottom: 15px }\n  100% { margin-bottom: 0 }\n`;\n\nconst SDot = styled.div`\n  background-color: #236f82;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  margin: 0 10px;\n\n  animation: ${animation} 0.6s ease-in infinite;\n  animation-delay: ${props => props.delay};\n\n  &:hover{\n    background-color: #073d4a;\n  }\n`;\n\nconst SLoader= styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n\n  padding: 2rem;\n`;\n\n\nconst Loader= props => {\n    return (\n        <SLoader\n        className= {props.className}>\n            <SDot delay= \"0s\" />\n            <SDot delay= \"0.2s\" />\n            <SDot delay= \"0.4s\" />\n        </SLoader>\n    );\n}\n\nexport default Loader;","import React, { useCallback, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { axiosLocations as axios } from \"../../services/axios\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nconst SSearch = styled.form`\n  min-width: 80%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n`;\n\nconst SUl = styled.ul`\n  list-style: none;\n  font-size: 2rem;\n  background-color: white;\n  width: 60rem;\n  max-height: 60vh;\n  overflow: scroll;\n  position: absolute;\n  top: 8rem;\n  margin: auto auto auto 4.5rem;\n  padding: 2rem;\n\n  box-shadow: 4px 2px 15px rgba(0, 0, 0, 0.2);\n\n  @media only screen and (max-width: 56.25em) {\n    width: 65%;\n    margin: auto auto auto 3rem;\n  }\n\n  @media only screen and (max-width: 31.25em) {\n    width: 50%;\n  }\n`;\n\nconst SLi = styled.li`\n  padding: 4px 2px;\n\n  &:not(:last-child)::after {\n    content: \"\";\n    width: 100%;\n    height: 1px;\n    background-color: #ccc;\n    display: block;\n  }\n`;\n\nconst Sa = styled.a`\n  &:hover {\n    cursor: pointer;\n    color: #236f82;\n  }\n`;\n\nconst Search = (props) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [isShown, setIsShown] = useState(false);\n\n  const debouncedSearchInput = useDebounce(searchInput, 500);\n\n  const { onLocationChoice, init, onError } = props;\n\n  const initState = useCallback(() => {\n    setSearchInput(\"\");\n    setResults([]);\n    setIsSearching(false);\n    setLocation(null);\n    setIsShown(false);\n  }, []);\n\n  useEffect(() => {\n    if (init) {\n      initState();\n    }\n  }, [init, initState]);\n\n  const getState = useCallback(async (query, isActive) => {\n      setIsSearching(true);\n      await axios\n        .get(\"\", {\n          params: { ...axios.params, q: query },\n        })\n        .then((res) => {\n          let limitedResults = [];\n          const limit = 10;\n          for (let i = 0; i < limit; i++) {\n            if (res.data[i]) {\n              limitedResults[i] = _.cloneDeep(res.data[i]);\n            }\n          }\n          if (isActive) {\n            setIsShown(true);\n            setResults(limitedResults);\n            setIsSearching(false);\n          }\n        })\n        .catch((err) => {\n          onError(err);\n          return [];\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (debouncedSearchInput) {\n      const query = debouncedSearchInput;\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [debouncedSearchInput, onError, getState, initState]);\n\n  useEffect(() => {\n    if (location) {\n      onLocationChoice(location);\n      initState();\n    }\n  }, [location, onLocationChoice, initState]);\n\n  useEffect(() => {\n    if (!isShown) {\n        setSearchInput(\"\");\n    }\n  }, [isShown]);\n\n  const clickHandler = (chosenLocationIndex) => {\n    if (results.length > 0) {\n      const chosenLocation = { ...results[chosenLocationIndex] };\n      setLocation({\n        locationKey: chosenLocation.Key,\n        city: chosenLocation.LocalizedName,\n        countryId: chosenLocation.Country.ID,\n      });\n      setIsShown(false);\n    }\n  };\n\n  let content;\n\n  if (results.length > 0 && !isSearching) {\n    content = (\n      <SUl>\n        {results.map((el, i) => (\n          <SLi key={el.Key}>\n            <Sa onClick={(e) => clickHandler(i)}>\n              {el.LocalizedName}, {el.Country.LocalizedName}\n            </Sa>\n          </SLi>\n        ))}\n      </SUl>\n    );\n  } else if (isSearching || searchInput) {\n    content = (\n      <SUl>\n        <SLi>\n          <Loader />\n        </SLi>\n      </SUl>\n    );\n  }\n\n  return (\n    <SSearch className={props.className}>\n      <Input\n        changed={(e) => setSearchInput(e.target.value)}\n        value={searchInput}\n      />\n      {isShown && content}\n    </SSearch>\n  );\n};\n\nexport default Search;\n","export const getIconSrc= (iconNum) => {\n    let num= iconNum?.toString();\n    if(iconNum < 10){\n        num= `0${num}`;\n    }\n    const src= iconNum ? `https://developer.accuweather.com/sites/default/files/${num}-s.png` : null;\n    return src;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst setSize= (size) => {\n    switch(size){\n        case 'small':\n            return '3.5rem';\n        default: //big\n            return `25rem;\n            \n            @media only screen and (max-width: 37.25em){\n                width: 20rem;\n            }`;\n    }\n}\n\nconst SImg= styled.img`\n    width: ${props => setSize(props?.size)};\n    height: auto;\n`;\n\nconst WeatherIcon= (props) => {\n\n    return(\n        <SImg \n        className= {props.className}\n        src= {props.src}\n        size= {props.size}\n        />\n    );\n}\n\nexport default WeatherIcon;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport WeatherIcon from '../UI/WeatherIcon/WeatherIcon'\n\nconst SCurrWeatherWrapper= styled.div`\n    display: flex;\n    align-items: center;\n\n    align-self: center;\n    \n    margin-right: -13rem;\n\n    @media only screen and (max-width: 75em){\n        margin-right: 0;\n    }\n`;\n\nconst SCurrWeather= styled.div`\n    font-weight: 100;\n    margin-left: 1rem;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nconst CurrWeather= props => {\n\n    return (\n        <SCurrWeatherWrapper\n        className= {props.className}>\n            <WeatherIcon\n            src= {props.data?.iconSrc}\n            size= 'big' />\n            <SCurrWeather>\n                <Typography\n                    className= {props.className}\n                    typographyType= 'heading1'\n                    text= {(props.data?.deg + '°')} />\n                <Typography \n                    className= {props.className}\n                    typographyType= 'heading3'\n                    text= {props.data?.description}/>\n            </SCurrWeather>\n        </SCurrWeatherWrapper>\n    );\n}\n\nexport default CurrWeather;","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\nimport moment from 'moment';\n\nconst CurrDate= props => {\n    let date= moment().format('dddd D MMMM');\n\n    return (\n        <Typography\n        className= {props.className}\n        typographyType= 'heading3'\n        text= {date} />\n    );\n}\n\nexport default CurrDate;","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\n\nconst CurrLocation= props => {\n\n    return (\n        <Typography \n        className= {props.className}\n        typographyType= 'heading2'\n        bold= {true}\n        shadow= {true}\n        text= {`${props.data?.city}, ${props.data?.country}`}\n        />\n    );\n}\n\nexport default CurrLocation;","import React from 'react';\nimport styled from 'styled-components';\nimport CurrWeather from '../CurrWeather/CurrWeather';\nimport CurrDate from '../CurrDate/CurrDate';\nimport CurrLocation from '../CurrLocation/CurrLocation';\n\nconst SCurrConditions= styled.div`\n    display: flex;\n    flex-direction: column;\n\n    margin: 4rem;\n\n    @media only screen and (max-width: 56.25em){\n        align-items: center;\n    }\n`;\n\nconst CurrConditions= props => {\n\n    return (\n        <SCurrConditions\n        className= {props.className}>\n            <CurrLocation \n            data= {props.data && {city: props.data.city, country: props.data.country}}\n            />\n            <CurrDate />\n            <CurrWeather\n            data= {props.data && {deg: props.data.deg, description: props.data.description, iconSrc: props.data.iconSrc}}\n            />\n        </SCurrConditions>\n    );\n}\n\nexport default CurrConditions;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosConditions as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport { getIconSrc } from \"../../utilities/getIconSrc\";\nimport CurrConditions from \"../../components/CurrConditions/CurrConditions\";\n\nconst CurrManager = (props) => {\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [iconNumber, setIconNumber] = useState(null);\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setTemperature(\"\");\n    setDescription(\"\");\n    setIconNumber(null);\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          const results = _.cloneDeep(res.data[0]);\n          if (isActive) {\n            setTemperature(results.Temperature.Metric.Value);\n            setDescription(results.WeatherText);\n            setIconNumber(results.WeatherIcon);\n          }\n        })\n        .catch((err) => {\n          onError(err);\n          return [];\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return (\n    <CurrConditions\n      className={props.className}\n      data={{\n        city: props.data.city,\n        country: props.data.country,\n        deg: temperature,\n        description: description,\n        iconSrc: getIconSrc(iconNumber),\n      }}\n    />\n  );\n};\n\nexport default CurrManager;\n","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\nimport styled from 'styled-components';\n\nconst SCurrParameterWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst CurrParameter= props => {\n    \n    const renderUnit= label => {\n        switch(label){\n            case 'hight':\n            case 'low':\n                return '°'; \n            case 'wind':\n                return 'mph'; \n            case 'rain':\n                return '%'; \n            default:\n                return '';\n        }\n    }\n    \n    return (\n        <SCurrParameterWrapper\n        className= {props.className}>\n            <Typography \n            className= {props.className}\n            typographyType= 'heading3'\n            text= {props.value + renderUnit(props.label)}/>\n            <Typography\n            className= {props.className}\n            typographyType= 'description'\n            text= {props.label}/>\n        </SCurrParameterWrapper>\n    );\n}\n\nexport default CurrParameter;","import React from 'react';\nimport styled from 'styled-components';\nimport CurrParameter from '../CurrParameter/CurrParameter';\n\nconst SCurrParametersWrapper= styled.div`\n    width: 85%;\n    min-width: 320px;\n    max-width: 510px;\n    height: 55%;\n    background-color: rgba(255,255,255, 0.2);\n    border-radius: 2rem;\n    padding: 1rem 2rem;\n\n    display: grid;\n    grid-auto-flow: column;\n    grid-template-rows: 1fr 1fr;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n    grid-gap: 1rem;\n\n    @media only screen and (max-width: 56.25em){\n        height: 70%;\n    }\n\n    @media only screen and (max-width: 31.25em){\n        width: 95%;\n    }\n`;\n\nconst CurrParameters= props => {\n\n    const renderCurrParameter= (value, label) => {\n        return <CurrParameter\n                key= {label}\n                value= {value}\n                label= {label} />\n    }\n\n    return (\n        <SCurrParametersWrapper\n        className= {props.className}>\n            {props.data?.map(el => renderCurrParameter(el.value, el.label))}\n        </SCurrParametersWrapper>\n    );\n}\n\nexport default CurrParameters;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosDaily as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport CurrParameters from \"../../components/CurrParameters/CurrParameters\";\n\nconst FtoC = (fDeg) => {\n  return ((fDeg - 32) * (5 / 9)).toFixed(1);\n};\n\nconst toLocalTime = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"HH:mm\");\n};\n\nconst DailyManager = (props) => {\n  const [sunrise, setSunrise] = useState(\"\");\n  const [sunset, setSunset] = useState(\"\");\n  const [lowTemperature, setLowTemperature] = useState(\"\");\n  const [highTemperature, setHighTemperature] = useState(\"\");\n  const [rainProb, setRainProb] = useState(\"\");\n  const [wind, setWind] = useState(\"\");\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setSunrise(\"\");\n    setSunset(\"\");\n    setLowTemperature(\"\");\n    setHighTemperature(\"\");\n    setRainProb(\"\");\n    setWind(\"\");\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          const results = _.cloneDeep(res.data.DailyForecasts[0]);\n\n          const sunriseTime = results.Sun.Rise;\n          const sunsetTime = results.Sun.Set;\n          if (isActive) {\n            setSunrise(toLocalTime(sunriseTime));\n            setSunset(toLocalTime(sunsetTime));\n            setLowTemperature(FtoC(results.Temperature.Minimum.Value));\n            setHighTemperature(FtoC(results.Temperature.Maximum.Value));\n            setRainProb(results.Day.RainProbability);\n            setWind(results.Day.Wind.Speed.Value);\n          }\n        })\n        .catch((err) => {\n          onError(err);\n          return [];\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return (\n    <CurrParameters\n      className={props.className}\n      data={[\n        { value: highTemperature, label: \"hight\" },\n        { value: lowTemperature, label: \"low\" },\n        { value: wind, label: \"wind\" },\n        { value: rainProb, label: \"rain\" },\n        { value: sunrise, label: \"sunrise\" },\n        { value: sunset, label: \"sunset\" },\n      ]}\n    />\n  );\n};\n\nexport default DailyManager;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport WeatherIcon from '../UI/WeatherIcon/WeatherIcon';\n\nconst SForcestItemWrapper= styled.div`\n    padding: 0.8rem;\n    height: 16rem;\n    width: 15rem;\n    min-width: 12rem;\n    margin: 0.8rem;\n    border-radius: 3px;\n    background-color: rgba(255, 255, 255, 0.2);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SWeatherIcon= styled(WeatherIcon)`\n    margin: 6px;\n    margin-bottom: 8px;\n`;\n\nconst ForecastItem= props => {\n    \n    return (\n        <SForcestItemWrapper\n        className= {props.className}>\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.date} />\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.time} />\n            <SWeatherIcon\n            src= {props.data.iconSrc}\n            size= \"small\"/>\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.value + '°'} />\n        </SForcestItemWrapper>\n    );\n}\n\nexport default ForecastItem;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport ForecastItem from '../ForecastItem/ForecastItem';\n\nconst SForecastWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n`;\n\nconst SForecast= styled.div`\n    display: flex;\n    flex-wrap: no-wrap;\n\n    height: 100%;\n    overflow-x: scroll;\n`;\n\nconst Forecast= props => {\n\n    const renderForecastItem= ({date, time, value, iconSrc}) => {\n        return <ForecastItem\n                key= {time}\n                data= {{date: date, time: time, value: value, iconSrc: iconSrc}}/>\n    }\n\n    return (\n        <SForecastWrapper\n        className= {props.className}>\n            <Typography\n            typographyType= 'heading3'\n            shadow= {true}\n            text= 'forecast'/>\n            <SForecast>\n                {props.data?.map(el => renderForecastItem({date: el.date, time: el.time, value: el.value, iconSrc: el.iconSrc}))}\n            </SForecast>\n        </SForecastWrapper>\n    );\n}\n\nexport default Forecast;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosForecast as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Forecast from \"../../components/Forecast/Forecast\";\nimport { getIconSrc } from \"../../utilities/getIconSrc\";\n\nconst FtoC = (fDeg) => {\n  return ((fDeg - 32) * (5 / 9)).toFixed(1);\n};\n\nconst toLocalDate = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"DD.MM\");\n};\n\nconst toLocalTime = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"HH:mm\");\n};\n\nconst ForcastManager = (props) => {\n  const [results, setResults] = useState([]);\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setResults([]);\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          let forecastResults = _.cloneDeep(res.data);\n          forecastResults = forecastResults.map((el) => {\n            return {\n              date: toLocalDate(el.DateTime),\n              time: toLocalTime(el.DateTime),\n              value: FtoC(el.Temperature.Value),\n              iconSrc: getIconSrc(el.WeatherIcon),\n            };\n          });\n          if (isActive) {\n            setResults(forecastResults);\n          }\n        })\n        .catch((err) => {\n          onError(err);\n          return [];\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return <Forecast className={props.className} data={results} />;\n};\n\nexport default ForcastManager;\n","export default __webpack_public_path__ + \"static/media/warning.11660318.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst SButton= styled.button`\n    border: none;\n    cursor: pointer;\n    padding: 1.8rem 3.2rem;\n    margin-top: 2rem;\n    border-radius: 100px;\n    background-color: #236f82;\n\n    text-transform: uppercase;\n    color: white;\n    font-size: 1.4;\n    font-weight: 400;\n\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n\n    & :active{\n        outline: none;\n    }\n\n    @media only screen and (max-width: 56.25em){\n        font-size: 1.2rem;\n    }\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 1rem;\n    }\n`;\n\nconst Button= props => {\n    return (\n        <SButton onClick={props.clicked}>\n            {props.children}\n        </SButton>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SBackdrop= styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\n\nconst Backdrop= props => {\n\n    return (\n        props.show ? <SBackdrop onClick={props.clicked}></SBackdrop> : null\n    );\n}\n\nexport default Backdrop;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../Typography/Typography';\nimport Icon from '../Icon/Icon';\nimport logo from '../../../assets/warning.svg';\nimport Button from '../Button/Button';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst SWrapper= styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\n@media only screen and (max-width: 56.25em){\n    grid-row: 2 / span 2;\n  }\n\nposition: relative;\nwidth: 100%;\nheight: 100%;\n`;\n\nconst SErrorMessageWrapper= styled.div`\nheight: 140%;\nwidth: 25%;\n\n@media only screen and (min-width: 75em){\n    height: 140%;\n    width: 30%;\n}\n\n@media only screen and (max-width: 75em){\n    height: 120%;\n    width: 35%;\n}\n\n@media only screen and (max-width: 56.25em){\n    height: 100%;\n    width: 45%;\n  }\n\n@media only screen and (max-width: 37.25em){\n    height: 80%;\n    width: 55%;\n}\n\n@media only screen and (max-width: 31.25em){\n    height: 60%;\n    width: 65%;\n}\n\nposition: absolute;\nmargin: auto;\nleft: 0;\nright: 0;\n\ntransition: all 0.3s ease-out;\n\ndisplay: grid;\n  grid-template-rows: 1.8fr 1fr;\n  grid-template-columns: 1fr;\n\n    z-index: 101;\n    text-align: center;\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n`;\n\nconst SIconWrapper= styled.div`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  align-self: center;\n\n  display: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n\nwidth: 100%;\nheight: 100%;\nbackground-image: linear-gradient(to top, #083540, #236f82);\n\n`;\n\nconst SDescriptionWrapper= styled.div`\n    grid-row: 2 / span 1;\n    grid-column: 1 / -1;\n\n    justify-self: center;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    background-color: #e1e3e1;\n\n`;\n\n\nconst ErrorMessage= props => {\n\n    return (\n        <SWrapper>\n            <Backdrop show= {props.show} clicked={props.closeErrorMessage}/>\n            <SErrorMessageWrapper\n            style= {{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n                <SIconWrapper>\n                    <Icon\n                    source= {logo}\n                    color= 'white'\n                    size= '7rem'\n                    />\n                    <Typography \n                    typographyType= 'caption'\n                    uppercase= {true}\n                    text= 'an error occured'/>\n                </SIconWrapper>\n                <SDescriptionWrapper>\n                    <Typography \n                    typographyType= 'caption'\n                    color= '#8c918d'\n                    text= {props.message}/>\n                    <Button clicked={props.closeErrorMessage}>Retry</Button>\n                </SDescriptionWrapper>\n            </SErrorMessageWrapper>\n        </SWrapper>\n    );\n}\n\nexport default ErrorMessage;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Search from \"../Search/Search\";\nimport CurrContainer from \"../CurrContainer/CurrContainer\";\nimport DailyContainer from \"../DailyContainer/DailyContainer\";\nimport ForecastContainer from \"../ForecastContainer/ForcastContainer\";\nimport ErrorMessage from \"../../components/UI/ErrorMessage/ErrorMessage\";\n\nconst SWeatherContainer = styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\njustify-self: start;\nalign-self: start;  \n\nheight: 100%;\n  width: 100%;\n    \n  display: grid;\n  grid-template-rows: 1fr 3.5fr 2fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 3.5fr 2.5fr 2fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.5fr 2fr 1.5fr 1fr;\n    grid-gap: 0.8rem;\n  }\n`;\n\nconst SSearch = styled(Search)`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n`;\n\nconst SCurrContainer = styled(CurrContainer)`\n  grid-row: 2 / span 1;\n  grid-column: 1 / span 1;\n\n  justify-self: center;\n\n  @media only screen and (max-width: 56.25em) {\n    grid-column: 1 / -1;\n    justify-self: center;\n  }\n`;\n\nconst SDailyContainer = styled(DailyContainer)`\n  grid-row: 2 / span 1;\n  grid-column: 2 / span 1;\n\n  @media only screen and (max-width: 56.25em) {\n    grid-row: 3 / span 1;\n    grid-column: 1 / -1;\n  }\n`;\n\nconst SForecastContainer = styled(ForecastContainer)`\n  grid-row: 3 / -1;\n  grid-column: 1 / -1;\n\n  @media only screen and (max-width: 56.25em) {\n    grid-row: 4 / -1;\n  }\n`;\n\nconst WeatherContainer = (props) => {\n  const [error, setError] = useState({ isError: false, message: \"\" });\n  const [locationKey, setLocationKey] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  useEffect(() => {}, [error.isError]);\n\n  const onLocationChoiceHandler = (locationData) => {\n    setLocationKey(locationData ? locationData.locationKey : \"\");\n    setCity(locationData ? locationData.city : \"\");\n    setCountry(locationData ? locationData.countryId : \"\");\n  };\n\n  const onErrorHandler = (err) => {\n    if (!error.isError) {\n      setError({ isError: true, message: err?.message });\n    }\n  };\n\n  const confirmedErrorSolve = () => {\n    if (error.isError) {\n      onLocationChoiceHandler(null);\n      setError({ isError: false, message: \"\" });\n    }\n  };\n\n  return (\n    <SWeatherContainer>\n      <SSearch\n        onLocationChoice={onLocationChoiceHandler}\n        init={error.isError}\n        onError={onErrorHandler}\n      />\n      {error.isError ? (\n        <ErrorMessage\n          show={true}\n          closeErrorMessage={confirmedErrorSolve}\n          message={error.message}\n        />\n      ) : !locationKey ? null : (\n        [\n          <SCurrContainer\n            onError={onErrorHandler}\n            key={\"CurrContainer\"}\n            locationKey={!error.isError ? locationKey : null}\n            data={\n              locationKey && {\n                city: city,\n                country: country,\n              }\n            }\n          />,\n          <SDailyContainer\n            onError={onErrorHandler}\n            key={\"DailyContainer\"}\n            locationKey={locationKey}\n          />,\n          <SForecastContainer\n            onError={onErrorHandler}\n            key={\"ForecastContainer\"}\n            locationKey={locationKey}\n          />,\n        ]\n      )}\n    </SWeatherContainer>\n  );\n};\n\nexport default WeatherContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from '../style/globalStyle';\nimport Typography from '../components/UI/Typography/Typography';\nimport img from '../assets/coverPhoto.jpg';\nimport WeatherContainer from '../containers/WeatherContainer/WeatherContainer';\n\nconst SContainer= styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  padding: 4rem;\n\n  background-image: url(${img});  \n  background-size: cover;\n  background-position: center;\n\n  display: grid;\n  grid-template-rows: 1fr 6.5fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 9fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.3fr 5fr;\n    grid-gap: 0.8rem;\n  }\n`;\n\nconst SAppTitle= styled(Typography)`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  justify-self: start;\n  align-self: start;\n`;\n\nfunction App() {\n  \n  return (\n    <>\n      <GlobalStyle />\n      <SContainer>\n        <SAppTitle \n        typographyType= 'heading3'\n        uppercase= {true}\n        text= 'weather app'/>\n       <WeatherContainer />\n      </SContainer> \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/HomePage';\n\nconst app= <App />;\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}