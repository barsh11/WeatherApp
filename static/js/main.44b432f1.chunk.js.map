{"version":3,"sources":["style/globalStyle.js","constants/api.js","services/axios.js","hooks/useDebounce.js","containers/Search/SearchStyle.js","assets/search.svg","components/UI/Icon/Icon.jsx","components/UI/Input/Input.jsx","components/UI/Loader/Loader.jsx","containers/Search/Search.js","containers/WeatherContainer/WeatherContainerStyle.js","utilities/getIconSrc.js","components/UI/Typography/Typography.jsx","components/UI/WeatherIcon/WeatherIcon.js","components/CurrWeather/CurrWeather.jsx","components/CurrDate/CurrDate.jsx","components/CurrLocation/CurrLocation.jsx","components/CurrConditions/CurrConditions.jsx","containers/CurrContainer/CurrContainer.js","components/CurrParameter/CurrParameter.jsx","components/CurrParameters/CurrParameters.jsx","containers/DailyContainer/DailyContainer.js","components/ForecastItem/ForecastItem.jsx","components/Forecast/Forecast.jsx","containers/ForecastContainer/ForcastContainer.js","assets/warning.svg","components/UI/Button/Button.jsx","components/UI/Backdrop/Backdrop.jsx","components/UI/ErrorMessage/ErrorMessage.jsx","containers/WeatherContainer/WeatherContainer.js","assets/coverPhoto.jpg","pages/HomePageStyle.js","pages/HomePage.js","index.js"],"names":["bodyStyles","css","htmlStyles","generalStyles","GlobalStyle","createGlobalStyle","BASE_URL","BASE_URL_LOCATIONS","BASE_URL_CONDITIONS","BASE_URL_DAILY","BASE_URL_FORECAST","createInstance","url","queryParams","axios","create","baseURL","params","apikey","axiosConditions","axiosDefs","axiosDaily","details","axiosForecast","axiosLocations","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","SSearch","styled","form","SUl","ul","SLi","li","Sa","a","SReactSVG","ReactSVG","size","transform","color","Icon","props","src","source","className","SInputWrapper","div","SInput","input","SIcon","Input","logo","placeholder","type","onChange","changed","animation","keyframes","SDot","SLoader","Loader","Search","searchInput","setSearchInput","results","setResults","isSearching","setIsSearching","location","setLocation","isShown","setIsShown","debouncedSearchInput","onLocationChoice","init","onError","initState","useCallback","getState","query","isActive","get","q","then","res","limitedResults","i","data","_","cloneDeep","catch","error","Object","getOwnPropertyDescriptor","content","length","map","el","onClick","e","chosenLocationIndex","chosenLocation","locationKey","Key","city","LocalizedName","countryId","Country","ID","clickHandler","target","SWeatherContainer","getIconSrc","iconNum","num","toString","STypography","setTypographySize","typographyType","bold","capitalize","uppercase","shadow","Typography","text","SImg","img","setSize","WeatherIcon","SCurrWeatherWrapper","SCurrWeather","CurrWeather","iconSrc","deg","description","CurrDate","date","moment","format","CurrLocation","country","SCurrConditions","CurrConditions","CurrContainer","temperature","setTemperature","setDescription","iconNumber","setIconNumber","Temperature","Metric","Value","WeatherText","SCurrParameterWrapper","CurrParameter","label","renderUnit","SCurrParametersWrapper","CurrParameters","FtoC","fDeg","toFixed","toLocalTime","ISO8601String","ISODate","utc","utcDate","toDate","local","DailyContainer","sunrise","setSunrise","sunset","setSunset","lowTemperature","setLowTemperature","highTemperature","setHighTemperature","rainProb","setRainProb","wind","setWind","DailyForecasts","sunriseTime","Sun","Rise","sunsetTime","Set","Minimum","Maximum","Day","RainProbability","Wind","Speed","SForcestItemWrapper","SWeatherIcon","ForecastItem","time","SForecastWrapper","SForecast","Forecast","renderForecastItem","toLocalDate","ForecastContainer","forecastResults","DateTime","SButton","button","Button","clicked","children","SBackdrop","Backdrop","show","SWrapper","SErrorMessageWrapper","SIconWrapper","SDescriptionWrapper","ErrorMessage","closeErrorMessage","style","opacity","message","WeatherContainer","isError","setError","setLocationKey","setCity","setCountry","onLocationChoiceHandler","locationData","onErrorHandler","errMsg","SContainer","SAppTitle","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44b432f1.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components';\n\n/*export const fontUrl = 'https://fonts.googleapis.com/css?family=Nunito+Sans:400,700,800,900';*/\n\n/*$bp-largest: 75em; //1200px\n$bp-large: 68.75em; //1100px\n$bp-medium: 56.25em; //900px\n$bp-small:  37.5em; //600px\n$bp-smallest: 31.25em; //500px*/\n\nexport const bodyStyles = css`\n    font-family: 'Helvetica';\n    color: #ccc;\n    font-weight: 300;\n    line-height: 1.6;\n`;\n\nexport const htmlStyles = css`\n    box-sizing: border-box;\n\n    font-size: 62.5%; /*1rem==10px / 10px/16px=62.5%*/\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 56.25%; /*1rem==9px / 9px/16px=56.25%*/\n    }\n`;\n\nexport const generalStyles= css`\n    margin: 0;\n    padding: 0;\n    box-sizing: inherit;\n`;\n\n\nexport const GlobalStyle = createGlobalStyle`\n    *,\n    *::before,\n    *::after{\n        ${generalStyles}\n    }    \n\n    html{\n        ${htmlStyles}\n    }\n\n    body {\n        ${bodyStyles}\n    }\n`;\n\nexport default GlobalStyle;","// API KEY\nexport const API_KEY = \"oJbB7AP9phsAdUXqkOtSMZpTavadhHay\";\n\n// BASE URL\nexport const BASE_URL = \"https://dataservice.accuweather.com/\";\n\n// LOCATIONS\nexport const BASE_URL_LOCATIONS = `${BASE_URL}locations/v1/cities/autocomplete`;\n\n// CONDITIONS\nexport const BASE_URL_CONDITIONS = `${BASE_URL}currentconditions/v1/`;\n\n// DAILY\nexport const BASE_URL_DAILY = `${BASE_URL}forecasts/v1/daily/1day/`;\n\n// FORECAST\nexport const BASE_URL_FORECAST = `${BASE_URL}forecasts/v1/hourly/12hour/`;\n","import axios from 'axios';\nimport * as axiosDefs from '../constants/api';\n\nconst createInstance= (url, queryParams) => {\n    const instance= axios.create({\n        baseURL: url,\n        params:{\n            apikey: axiosDefs.API_KEY,\n            ...queryParams\n        }\n    })\n    return instance;\n}\n\nexport const axiosConditions= createInstance(axiosDefs.BASE_URL_CONDITIONS, null);\n\nexport const axiosDaily= createInstance(axiosDefs.BASE_URL_DAILY, {details: true});\n\nexport const axiosForecast= createInstance(axiosDefs.BASE_URL_FORECAST, null);\n\nexport const axiosLocations= createInstance(axiosDefs.BASE_URL_LOCATIONS, null);","import { useState, useEffect } from \"react\";\n\nconst useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;","import styled from \"styled-components\";\n\nexport const SSearch = styled.form`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  min-width: 80%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  position: relative;\n`;\n\nexport const SUl = styled.ul`\n  list-style: none;\n  font-size: 2rem;\n  background-color: white;\n  width: 60rem;\n  max-height: 60vh;\n  overflow: scroll;\n  position: absolute;\n  top: 8rem;\n  margin: auto auto auto 4.5rem;\n  padding: 2rem;\n\n  box-shadow: 4px 2px 15px rgba(0, 0, 0, 0.2);\n\n  @media only screen and (max-width: 56.25em) {\n    width: 65%;\n    margin: auto auto auto 3rem;\n  }\n\n  @media only screen and (max-width: 31.25em) {\n    width: 50%;\n  }\n`;\n\nexport const SLi = styled.li`\n  padding: 4px 2px;\n\n  &:not(:last-child)::after {\n    content: \"\";\n    width: 100%;\n    height: 1px;\n    background-color: #ccc;\n    display: block;\n  }\n`;\n\nexport const Sa = styled.a`\n  &:hover {\n    cursor: pointer;\n    color: #236f82;\n  }\n`;","export default __webpack_public_path__ + \"static/media/search.6ac6b6bc.svg\";","import React from 'react';\nimport { ReactSVG } from 'react-svg';\nimport styled, { css } from 'styled-components';\n\nconst SReactSVG= styled(ReactSVG)`\n\nsvg{\n    fill: black;\n    ${({size}) => size && css`width: ${size}; height: ${size};`}\n    ${({transform}) => transform && css`transform: ${transform};`}\n    path{\n        ${({color}) => color && css`fill: ${color};`}\n    }\n}\n`;\n\nconst Icon= props => {\n    return(\n        <SReactSVG\n        src= {props.source}\n        color= {props.color}\n        size= {props.size}\n        transform= {props.transform}\n        className= {props.className}\n        />\n    );\n}\n\nexport default Icon;","import React from 'react';\nimport styled from 'styled-components';\nimport logo from '../../../assets/search.svg';\nimport Icon from '../Icon/Icon';\n\nconst SInputWrapper= styled.div`\n    display: flex;\n    align-items: center;\n\n    width: 70rem;\n\n    @media only screen and (max-width: 56.25em){\n        width: 100%;\n    }\n`;\n\nconst SInput= styled.input`\n    border: none;\n    \n    width: 100%;\n    font-size: 2.2rem;\n    border-radius: 5rem;\n    padding: 2.5rem 4.5rem 2.5rem 5rem;\n    margin: 0 auto;\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n    \n    &::placeholder{\n        color: #8c918d;\n        font-size: 2.5rem;\n\n        transform: translateY(0.4rem);\n    }\n\n    &:focus{\n        outline: none;\n    }\n`;\n\nconst SIcon= styled(Icon)`\n    transform: translate(4.5rem, 0.3rem);\n`;\n\nconst Input= props => {\n    return (\n        <SInputWrapper>\n            <SIcon \n            source= {logo}\n            color= \"#ccc\"\n            size= \"3rem\" />\n            <SInput \n            placeholder= \"Search for a city...\"\n            type= \"search\"\n            onChange= {props.changed}\n            value= {props.value}\n            />\n        </SInputWrapper>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst animation= keyframes`\n  0% { margin-bottom: 0 }\n  50% { margin-bottom: 15px }\n  100% { margin-bottom: 0 }\n`;\n\nconst SDot = styled.div`\n  background-color: #236f82;\n  border-radius: 50%;\n  width: 14px;\n  height: 14px;\n  margin: 0 10px;\n\n  animation: ${animation} 0.6s ease-in infinite;\n  animation-delay: ${props => props.delay};\n\n  &:hover{\n    background-color: #073d4a;\n  }\n`;\n\nconst SLoader= styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n\n  padding: 2rem;\n`;\n\n\nconst Loader= props => {\n    return (\n        <SLoader\n        className= {props.className}>\n            <SDot delay= \"0s\" />\n            <SDot delay= \"0.2s\" />\n            <SDot delay= \"0.4s\" />\n        </SLoader>\n    );\n}\n\nexport default Loader;","import React, { useCallback, useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { axiosLocations as axios } from \"../../services/axios\";\nimport useDebounce from \"../../hooks/useDebounce\";\nimport { SSearch, SUl, SLi, Sa } from \"./SearchStyle\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Loader from \"../../components/UI/Loader/Loader\";\n\nconst Search = (props) => {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [location, setLocation] = useState(null);\n  const [isShown, setIsShown] = useState(false);\n\n  const debouncedSearchInput = useDebounce(searchInput, 500);\n\n  const { onLocationChoice, init, onError } = props;\n\n  const initState = useCallback(() => {\n    setSearchInput(\"\");\n    setResults([]);\n    setIsSearching(false);\n    setLocation(null);\n    setIsShown(false);\n  }, []);\n\n  useEffect(() => {\n    if (init) {\n      initState();\n    }\n  }, [init, initState]);\n\n  const getState = useCallback(\n    async (query, isActive) => {\n      setIsSearching(true);\n      await axios\n        .get(\"\", {\n          params: { ...axios.params, q: query },\n        })\n        .then((res) => {\n          let limitedResults = [];\n          const limit = 10;\n          for (let i = 0; i < limit; i++) {\n            if (res.data[i]) {\n              limitedResults[i] = _.cloneDeep(res.data[i]);\n            }\n          }\n          if (isActive) {\n            setIsShown(true);\n            setResults(limitedResults);\n            setIsSearching(false);\n          }\n        })\n        .catch((error) => {\n          onError(Object.getOwnPropertyDescriptor(error, \"message\").value);\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    if (debouncedSearchInput) {\n      const query = debouncedSearchInput;\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [debouncedSearchInput, onError, getState, initState]);\n\n  useEffect(() => {\n    if (location) {\n      onLocationChoice(location);\n    }\n  }, [location, onLocationChoice]);\n\n  useEffect(() => {\n    if (!isShown) {\n      setSearchInput(\"\");\n    }\n  }, [isShown]);\n\n  const clickHandler = (chosenLocationIndex) => {\n    if (results.length > 0) {\n      const chosenLocation = { ...results[chosenLocationIndex] };\n      setLocation({\n        locationKey: chosenLocation.Key,\n        city: chosenLocation.LocalizedName,\n        countryId: chosenLocation.Country.ID,\n      });\n      setIsShown(false);\n    }\n  };\n\n  let content;\n\n  if (results.length && !isSearching) {\n    content = (\n      <SUl>\n        {results.map((el, i) => (\n          <SLi key={el.Key}>\n            <Sa onClick={(e) => clickHandler(i)}>\n              {el.LocalizedName}, {el.Country.LocalizedName}\n            </Sa>\n          </SLi>\n        ))}\n      </SUl>\n    );\n  } else if (isSearching || searchInput) {\n    content = (\n      <SUl>\n        <SLi>\n          <Loader />\n        </SLi>\n      </SUl>\n    );\n  }\n\n  return (\n    <SSearch className={props.className}>\n      <Input\n        changed={(e) => setSearchInput(e.target.value)}\n        value={searchInput}\n      />\n      {isShown && content}\n    </SSearch>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nexport const SWeatherContainer = styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\njustify-self: start;\nalign-self: start;  \n\nheight: 100%;\n  width: 100%;\n    \n  display: grid;\n  grid-template-rows: 1fr 3.5fr 2fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 3.5fr 2.5fr 2fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.5fr 2fr 1.5fr 1fr;\n    grid-gap: 0.8rem;\n  }\n`;","export const getIconSrc= (iconNum) => {\n    let num= iconNum?.toString();\n    if(iconNum < 10){\n        num= `0${num}`;\n    }\n    const src= iconNum ? `https://developer.accuweather.com/sites/default/files/${num}-s.png` : null;\n    return src;\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst setTypographySize= (type) => {\n    switch(type){\n        case 'heading1':\n            return `\n            7.6rem;\n\n            @media only screen and (max-width: 37.25em){\n                font-size: 6rem;\n            }\n            `;\n        case 'heading2':\n            return `\n            5.8rem;\n            `;\n        case 'heading3':\n            return `\n            2.8rem;\n            `;\n        case 'body':\n            return `\n            2.2rem;\n            `;\n        case 'description': \n            return `\n            2rem;\n            `;\n        default:\n            return`\n            1.5rem;\n            `;\n    }\n}\n\nconst STypography= styled.div`\n    font-size: ${props => setTypographySize(props.typographyType)};\n    color: ${props => props.color};\n    font-weight:  ${props => props.bold && `400`};\n    text-transform: ${props => props.capitalize && `capitalize`};\n    text-transform: ${props => props.uppercase && `uppercase`};\n    text-shadow: ${props => props.shadow && `1px 2px 4px rgba(0,0,0,0.2)`};\n`;\n\nconst Typography= (props) => {\n    return (\n        <STypography\n        className= {props.className}\n        typographyType= {props.typographyType || 'caption'}\n        color= {props.color || 'white'}\n        bold= {props.bold || false}\n        capitalize= {props.capitalize || true}\n        uppercase= {props.uppercase || false}\n        shadow= {props.shadow || false}\n        >\n            {props.text || ''}\n        </STypography>\n    );\n}\n\nexport default Typography;","import React from 'react';\nimport styled from 'styled-components';\n\nconst setSize= (size) => {\n    switch(size){\n        case 'small':\n            return '3.5rem';\n        default: //big\n            return `25rem;\n            \n            @media only screen and (max-width: 37.25em){\n                width: 20rem;\n            }`;\n    }\n}\n\nconst SImg= styled.img`\n    width: ${props => setSize(props?.size)};\n    height: auto;\n`;\n\nconst WeatherIcon= (props) => {\n\n    return(\n        <SImg \n        className= {props.className}\n        src= {props.src}\n        size= {props.size}\n        />\n    );\n}\n\nexport default WeatherIcon;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport WeatherIcon from '../UI/WeatherIcon/WeatherIcon'\n\nconst SCurrWeatherWrapper= styled.div`\n    display: flex;\n    align-items: center;\n\n    align-self: center;\n    \n    margin-right: -13rem;\n\n    @media only screen and (max-width: 75em){\n        margin-right: 0;\n    }\n`;\n\nconst SCurrWeather= styled.div`\n    font-weight: 100;\n    margin-left: 1rem;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nconst CurrWeather= props => {\n\n    return (\n        <SCurrWeatherWrapper\n        className= {props.className}>\n            <WeatherIcon\n            src= {props.data?.iconSrc}\n            size= 'big' />\n            <SCurrWeather>\n                <Typography\n                    className= {props.className}\n                    typographyType= 'heading1'\n                    text= {(props.data?.deg + '°')} />\n                <Typography \n                    className= {props.className}\n                    typographyType= 'heading3'\n                    text= {props.data?.description}/>\n            </SCurrWeather>\n        </SCurrWeatherWrapper>\n    );\n}\n\nexport default CurrWeather;","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\nimport moment from 'moment';\n\nconst CurrDate= props => {\n    let date= moment().format('dddd D MMMM');\n\n    return (\n        <Typography\n        className= {props.className}\n        typographyType= 'heading3'\n        text= {date} />\n    );\n}\n\nexport default CurrDate;","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\n\nconst CurrLocation= props => {\n\n    return (\n        <Typography \n        className= {props.className}\n        typographyType= 'heading2'\n        bold= {true}\n        shadow= {true}\n        text= {`${props.data?.city}, ${props.data?.country}`}\n        />\n    );\n}\n\nexport default CurrLocation;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CurrWeather from \"../CurrWeather/CurrWeather\";\nimport CurrDate from \"../CurrDate/CurrDate\";\nimport CurrLocation from \"../CurrLocation/CurrLocation\";\n\nconst SCurrConditions = styled.div`\n  grid-row: 2 / span 1;\n  grid-column: 1 / span 1;\n\n  justify-self: center;\n\n  @media only screen and (max-width: 56.25em) {\n    grid-column: 1 / -1;\n    justify-self: center;\n  }\n\n  display: flex;\n  flex-direction: column;\n\n  margin: 4rem;\n\n  @media only screen and (max-width: 56.25em) {\n    align-items: center;\n  }\n`;\n\nconst CurrConditions = (props) => {\n  return (\n    <SCurrConditions className={props.className}>\n      <CurrLocation\n        data={\n          props.data && { city: props.data.city, country: props.data.country }\n        }\n      />\n      <CurrDate />\n      <CurrWeather\n        data={\n          props.data && {\n            deg: props.data.deg,\n            description: props.data.description,\n            iconSrc: props.data.iconSrc,\n          }\n        }\n      />\n    </SCurrConditions>\n  );\n};\n\nexport default CurrConditions;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosConditions as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport { getIconSrc } from \"../../utilities/getIconSrc\";\nimport CurrConditions from \"../../components/CurrConditions/CurrConditions\";\n\nconst CurrContainer = (props) => {\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [iconNumber, setIconNumber] = useState(null);\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setTemperature(\"\");\n    setDescription(\"\");\n    setIconNumber(null);\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          const results = _.cloneDeep(res.data[0]);\n          if (isActive) {\n            setTemperature(results.Temperature.Metric.Value);\n            setDescription(results.WeatherText);\n            setIconNumber(results.WeatherIcon);\n          }\n        })\n        .catch((error) => {\n          onError(Object.getOwnPropertyDescriptor(error, 'message').value);\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return (\n    <CurrConditions\n      className={props.className}\n      data={{\n        city: props.data.city,\n        country: props.data.country,\n        deg: temperature,\n        description: description,\n        iconSrc: getIconSrc(iconNumber),\n      }}\n    />\n  );\n};\n\nexport default CurrContainer;\n","import React from 'react';\nimport Typography from '../UI/Typography/Typography';\nimport styled from 'styled-components';\n\nconst SCurrParameterWrapper= styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst CurrParameter= props => {\n    \n    const renderUnit= label => {\n        switch(label){\n            case 'hight':\n            case 'low':\n                return '°'; \n            case 'wind':\n                return 'mph'; \n            case 'rain':\n                return '%'; \n            default:\n                return '';\n        }\n    }\n    \n    return (\n        <SCurrParameterWrapper\n        className= {props.className}>\n            <Typography \n            className= {props.className}\n            typographyType= 'heading3'\n            text= {props.value + renderUnit(props.label)}/>\n            <Typography\n            className= {props.className}\n            typographyType= 'description'\n            text= {props.label}/>\n        </SCurrParameterWrapper>\n    );\n}\n\nexport default CurrParameter;","import React from \"react\";\nimport styled from \"styled-components\";\nimport CurrParameter from \"../CurrParameter/CurrParameter\";\n\nconst SCurrParametersWrapper = styled.div`\n  grid-row: 2 / span 1;\n  grid-column: 2 / span 1;\n\n  @media only screen and (max-width: 56.25em) {\n    grid-row: 3 / span 1;\n    grid-column: 1 / -1;\n  }\n\n  width: 85%;\n  min-width: 320px;\n  max-width: 510px;\n  height: 55%;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 2rem;\n  padding: 1rem 2rem;\n\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-rows: 1fr 1fr;\n  grid-template-columns: 1fr 1fr 1fr;\n  align-items: center;\n  grid-gap: 1rem;\n\n  @media only screen and (max-width: 56.25em) {\n    height: 70%;\n  }\n\n  @media only screen and (max-width: 31.25em) {\n    width: 95%;\n  }\n`;\n\nconst CurrParameters = (props) => {\n  const renderCurrParameter = (value, label) => {\n    return <CurrParameter key={label} value={value} label={label} />;\n  };\n\n  return (\n    <SCurrParametersWrapper className={props.className}>\n      {props.data?.map((el) => renderCurrParameter(el.value, el.label))}\n    </SCurrParametersWrapper>\n  );\n};\n\nexport default CurrParameters;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosDaily as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport CurrParameters from \"../../components/CurrParameters/CurrParameters\";\n\nconst FtoC = (fDeg) => {\n  return ((fDeg - 32) * (5 / 9)).toFixed(1);\n};\n\nconst toLocalTime = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"HH:mm\");\n};\n\nconst DailyContainer = (props) => {\n  const [sunrise, setSunrise] = useState(\"\");\n  const [sunset, setSunset] = useState(\"\");\n  const [lowTemperature, setLowTemperature] = useState(\"\");\n  const [highTemperature, setHighTemperature] = useState(\"\");\n  const [rainProb, setRainProb] = useState(\"\");\n  const [wind, setWind] = useState(\"\");\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setSunrise(\"\");\n    setSunset(\"\");\n    setLowTemperature(\"\");\n    setHighTemperature(\"\");\n    setRainProb(\"\");\n    setWind(\"\");\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          \n          const results = _.cloneDeep(res.data.DailyForecasts[0]);\n\n          const sunriseTime = results.Sun.Rise;\n          const sunsetTime = results.Sun.Set;\n          if (isActive) {\n            setSunrise(toLocalTime(sunriseTime));\n            setSunset(toLocalTime(sunsetTime));\n            setLowTemperature(FtoC(results.Temperature.Minimum.Value));\n            setHighTemperature(FtoC(results.Temperature.Maximum.Value));\n            setRainProb(results.Day.RainProbability);\n            setWind(results.Day.Wind.Speed.Value);\n          }\n        })\n        .catch((error) => { \n          onError(Object.getOwnPropertyDescriptor(error, 'message').value);\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return (\n    <CurrParameters\n      className={props.className}\n      data={[\n        { value: highTemperature, label: \"hight\" },\n        { value: lowTemperature, label: \"low\" },\n        { value: wind, label: \"wind\" },\n        { value: rainProb, label: \"rain\" },\n        { value: sunrise, label: \"sunrise\" },\n        { value: sunset, label: \"sunset\" },\n      ]}\n    />\n  );\n};\n\nexport default DailyContainer;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport WeatherIcon from '../UI/WeatherIcon/WeatherIcon';\n\nconst SForcestItemWrapper= styled.div`\n    padding: 0.8rem;\n    height: 16rem;\n    width: 15rem;\n    min-width: 12rem;\n    margin: 0.8rem;\n    border-radius: 3px;\n    background-color: rgba(255, 255, 255, 0.2);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst SWeatherIcon= styled(WeatherIcon)`\n    margin: 6px;\n    margin-bottom: 8px;\n`;\n\nconst ForecastItem= props => {\n    \n    return (\n        <SForcestItemWrapper\n        className= {props.className}>\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.date} />\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.time} />\n            <SWeatherIcon\n            src= {props.data.iconSrc}\n            size= \"small\"/>\n            <Typography\n            typographyType= 'body'\n            capitalize= {false}\n            text= {props.data.value + '°'} />\n        </SForcestItemWrapper>\n    );\n}\n\nexport default ForecastItem;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../UI/Typography/Typography';\nimport ForecastItem from '../ForecastItem/ForecastItem';\n\nconst SForecastWrapper= styled.div`\n    grid-row: 3 / -1;\n    grid-column: 1 / -1;\n\n    @media only screen and (max-width: 56.25em) {\n    grid-row: 4 / -1;\n    }\n\n    display: flex;\n    flex-direction: column;\n\n    width: 100%;\n`;\n\nconst SForecast= styled.div`\n    display: flex;\n    flex-wrap: no-wrap;\n\n    height: 100%;\n    overflow-x: scroll;\n`;\n\nconst Forecast= props => {\n\n    const renderForecastItem= ({date, time, value, iconSrc}) => {\n        return <ForecastItem\n                key= {time}\n                data= {{date: date, time: time, value: value, iconSrc: iconSrc}}/>\n    }\n\n    return (\n        <SForecastWrapper\n        className= {props.className}>\n            <Typography\n            typographyType= 'heading3'\n            shadow= {true}\n            text= 'forecast'/>\n            <SForecast>\n                {props.data?.map(el => renderForecastItem({date: el.date, time: el.time, value: el.value, iconSrc: el.iconSrc}))}\n            </SForecast>\n        </SForecastWrapper>\n    );\n}\n\nexport default Forecast;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { axiosForecast as axios } from \"../../services/axios\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Forecast from \"../../components/Forecast/Forecast\";\nimport { getIconSrc } from \"../../utilities/getIconSrc\";\n\nconst FtoC = (fDeg) => {\n  return ((fDeg - 32) * (5 / 9)).toFixed(1);\n};\n\nconst toLocalDate = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"DD.MM\");\n};\n\nconst toLocalTime = (ISO8601String) => {\n  const ISODate = moment.utc().format(ISO8601String);\n  const utcDate = moment.utc(ISODate).toDate();\n  return moment(utcDate).local().format(\"HH:mm\");\n};\n\nconst ForecastContainer = (props) => {\n  const [results, setResults] = useState([]);\n\n  const { locationKey, onError } = props;\n\n  const initState = useCallback(() => {\n    setResults([]);\n  }, []);\n\n  const getState = useCallback(\n    (query, isActive) => {\n      axios\n        .get(`${query}`)\n        .then((res) => {\n          let forecastResults = _.cloneDeep(res.data);\n          forecastResults = forecastResults.map((el) => {\n            return {\n              date: toLocalDate(el.DateTime),\n              time: toLocalTime(el.DateTime),\n              value: FtoC(el.Temperature.Value),\n              iconSrc: getIconSrc(el.WeatherIcon),\n            };\n          });\n          if (isActive) {\n            setResults(forecastResults);\n          }\n        })\n        .catch((error) => {\n          onError(Object.getOwnPropertyDescriptor(error, 'message').value);\n        });\n    },\n    [onError]\n  );\n\n  useEffect(() => {\n    let isActive = true;\n\n    const query = locationKey;\n    if (query) {\n      getState(query, isActive);\n    } else {\n      if (isActive) {\n        initState();\n      }\n    }\n\n    return () => {\n      isActive = false;\n    };\n  }, [locationKey, onError, getState, initState]);\n\n  return <Forecast className={props.className} data={results} />;\n};\n\nexport default ForecastContainer;\n","export default __webpack_public_path__ + \"static/media/warning.11660318.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst SButton= styled.button`\n    border: none;\n    cursor: pointer;\n    padding: 1.8rem 3.2rem;\n    margin-top: 2rem;\n    border-radius: 100px;\n    background-color: #236f82;\n\n    text-transform: uppercase;\n    color: white;\n    font-size: 1.4;\n    font-weight: 400;\n\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n\n    & :active{\n        outline: none;\n    }\n\n    @media only screen and (max-width: 56.25em){\n        font-size: 1.2rem;\n    }\n\n    @media only screen and (max-width: 31.25em){\n        font-size: 1rem;\n    }\n`;\n\nconst Button= props => {\n    return (\n        <SButton onClick={props.clicked}>\n            {props.children}\n        </SButton>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\n\nconst SBackdrop= styled.div`\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    z-index: 100;\n    left: 0;\n    top: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\n\nconst Backdrop= props => {\n\n    return (\n        props.show ? <SBackdrop onClick={props.clicked}></SBackdrop> : null\n    );\n}\n\nexport default Backdrop;","import React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../Typography/Typography';\nimport Icon from '../Icon/Icon';\nimport logo from '../../../assets/warning.svg';\nimport Button from '../Button/Button';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst SWrapper= styled.div`\ngrid-row: 2 / span 1;\ngrid-column: 1 / -1;\n\n@media only screen and (max-width: 56.25em){\n    grid-row: 2 / span 2;\n  }\n\nposition: relative;\nwidth: 100%;\nheight: 100%;\n`;\n\nconst SErrorMessageWrapper= styled.div`\nheight: 140%;\nwidth: 25%;\n\n@media only screen and (min-width: 75em){\n    height: 140%;\n    width: 30%;\n}\n\n@media only screen and (max-width: 75em){\n    height: 120%;\n    width: 35%;\n}\n\n@media only screen and (max-width: 56.25em){\n    height: 100%;\n    width: 45%;\n  }\n\n@media only screen and (max-width: 37.25em){\n    height: 80%;\n    width: 55%;\n}\n\n@media only screen and (max-width: 31.25em){\n    height: 60%;\n    width: 65%;\n}\n\nposition: absolute;\nmargin: auto;\nleft: 0;\nright: 0;\n\ntransition: all 0.3s ease-out;\n\ndisplay: grid;\n  grid-template-rows: 1.8fr 1fr;\n  grid-template-columns: 1fr;\n\n    z-index: 101;\n    text-align: center;\n    box-shadow: 4px 2px 15px rgba(0,0,0,0.2);\n`;\n\nconst SIconWrapper= styled.div`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  align-self: center;\n\n  display: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: center;\n\nwidth: 100%;\nheight: 100%;\nbackground-image: linear-gradient(to top, #083540, #236f82);\n\n`;\n\nconst SDescriptionWrapper= styled.div`\n    grid-row: 2 / span 1;\n    grid-column: 1 / -1;\n\n    justify-self: center;\n    \n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n\n    width: 100%;\n    height: 100%;\n    padding: 15px;\n    background-color: #e1e3e1;\n\n`;\n\n\nconst ErrorMessage= props => {\n\n    return (\n        <SWrapper>\n            <Backdrop show= {props.show} clicked={props.closeErrorMessage}/>\n            <SErrorMessageWrapper\n            style= {{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0'\n            }}>\n                <SIconWrapper>\n                    <Icon\n                    source= {logo}\n                    color= 'white'\n                    size= '7rem'\n                    />\n                    <Typography \n                    typographyType= 'caption'\n                    uppercase= {true}\n                    text= 'an error occured'/>\n                </SIconWrapper>\n                <SDescriptionWrapper>\n                    <Typography \n                    typographyType= 'caption'\n                    color= '#8c918d'\n                    text= {props.message}/>\n                    <Button clicked={props.closeErrorMessage}>Retry</Button>\n                </SDescriptionWrapper>\n            </SErrorMessageWrapper>\n        </SWrapper>\n    );\n}\n\nexport default ErrorMessage;","import React, { useState } from \"react\";\nimport Search from \"../Search/Search\";\nimport { SWeatherContainer } from './WeatherContainerStyle';\nimport CurrContainer from \"../CurrContainer/CurrContainer\";\nimport DailyContainer from \"../DailyContainer/DailyContainer\";\nimport ForecastContainer from \"../ForecastContainer/ForcastContainer\";\nimport ErrorMessage from \"../../components/UI/ErrorMessage/ErrorMessage\";\n\nconst WeatherContainer = (props) => {\n  const [error, setError] = useState({ isError: false, message: \"\" });\n  const [locationKey, setLocationKey] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n\n  const onLocationChoiceHandler = (locationData) => {\n    setLocationKey(locationData?.locationKey || \"\");\n    setCity(locationData?.city || \"\");\n    setCountry(locationData?.countryId || \"\");\n  };\n\n  const onErrorHandler = (errMsg) => {\n    if (!error.isError) {\n      setError({ isError: true, message: errMsg });\n    }\n  };\n\n  const confirmedErrorSolve = () => {\n    if (error.isError) {\n      onLocationChoiceHandler(null);\n      setError({ isError: false, message: \"\" });\n    }\n  };\n\n  return (\n    <SWeatherContainer>\n      <Search\n        onLocationChoice={onLocationChoiceHandler}\n        init={error.isError}\n        onError={onErrorHandler}\n      />\n      {error.isError ? (\n        <ErrorMessage\n          show={true}\n          closeErrorMessage={confirmedErrorSolve}\n          message={error.message}\n        />\n      ) : !locationKey ? null : (\n        [\n          <CurrContainer\n            onError={onErrorHandler}\n            key={\"CurrContainer\"}\n            locationKey={!error.isError ? locationKey : null}\n            data={\n              locationKey && {\n                city: city,\n                country: country,\n              }\n            }\n          />,\n          <DailyContainer\n            onError={onErrorHandler}\n            key={\"DailyContainer\"}\n            locationKey={locationKey}\n          />,\n          <ForecastContainer\n            onError={onErrorHandler}\n            key={\"ForecastContainer\"}\n            locationKey={locationKey}\n          />,\n        ]\n      )}\n    </SWeatherContainer>\n  );\n};\n\nexport default WeatherContainer;\n","export default __webpack_public_path__ + \"static/media/coverPhoto.2fb44ada.jpg\";","import styled from 'styled-components';\nimport Typography from '../components/UI/Typography/Typography';\nimport img from '../assets/coverPhoto.jpg';\n\nexport const SContainer= styled.div`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  padding: 4rem;\n\n  background-image: url(${img});  \n  background-size: cover;\n  background-position: center;\n\n  display: grid;\n  grid-template-rows: 1fr 6.5fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  justify-items: center;\n\n  @media only screen and (max-width: 56.25em){\n    grid-template-rows: 1fr 9fr;\n    grid template-columns: 1fr;\n  }\n\n  @media only screen and (max-width: 31.25em){\n    grid-template-rows: 0.3fr 5fr;\n    grid-gap: 0.8rem;\n  }\n`;\n\nexport const SAppTitle= styled(Typography)`\n  grid-row: 1 / span 1;\n  grid-column: 1 / -1;\n\n  justify-self: start;\n  align-self: start;\n`;","import React from \"react\";\nimport GlobalStyle from \"../style/globalStyle\";\nimport WeatherContainer from \"../containers/WeatherContainer/WeatherContainer\";\nimport { SContainer, SAppTitle } from \"./HomePageStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <SContainer>\n        <SAppTitle\n          typographyType=\"heading3\"\n          uppercase={true}\n          text=\"weather app\"\n        />\n        <WeatherContainer />\n      </SContainer>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/HomePage';\n\nconst app= <App />;\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}